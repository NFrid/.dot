!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
$FZF_DEFAULT_COMMAND	conf/fzf.vim	/^let $FZF_DEFAULT_COMMAND="rg --files --hidden --glob '!.git\/**'"$/;"	v
$FZF_DEFAULT_OPTS	conf/fzf.vim	/^let $FZF_DEFAULT_OPTS = '--layout=reverse --inline-info'$/;"	v
$NVIM_TUI_ENABLE_TRUE_COLOR	general/appearance.vim	/^let $NVIM_TUI_ENABLE_TRUE_COLOR=1$/;"	v
/	conf/easymotion.vim	/^nmap  \/ <Plug>(easymotion-sn)$/;"	m
0	coc-settings.json	/^    "markdown",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
0	coc-settings.json	/^    "markdown",$/;"	s	array:coc.source.emoji.filetypes
1	coc-settings.json	/^    "gitcommit",$/;"	s	array:coc.source.emoji.filetypes
1	coc-settings.json	/^    "javascript",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
2	coc-settings.json	/^    "javascript",$/;"	s	array:coc.source.emoji.filetypes
2	coc-settings.json	/^    "javascriptreact",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
3	coc-settings.json	/^    "javascriptreact",$/;"	s	array:coc.source.emoji.filetypes
3	coc-settings.json	/^    "vue",$/;"	s	array:coc.preferences.formatOnSaveFiletypes
4	coc-settings.json	/^    "python"$/;"	s	array:coc.preferences.formatOnSaveFiletypes
4	coc-settings.json	/^    "vue",$/;"	s	array:coc.source.emoji.filetypes
5	coc-settings.json	/^    "python"$/;"	s	array:coc.source.emoji.filetypes
<A-Down>	general/mappings.vim	/^nmap <silent> <A-Down> :resize -2<CR>$/;"	m
<A-Left>	general/mappings.vim	/^nmap <silent> <A-Left> :vertical resize -2<CR>$/;"	m
<A-Right>	general/mappings.vim	/^nmap <silent> <A-Right> :vertical resize +2<CR>$/;"	m
<A-Up>	general/mappings.vim	/^nmap <silent> <A-Up> :resize +2<CR>$/;"	m
<A-c>	general/mappings.vim	/^noremap <A-c> "+$/;"	m
<A-h>	general/mappings.vim	/^map <A-h> <C-w>h$/;"	m
<A-j>	general/mappings.vim	/^map <A-j> <C-w>j$/;"	m
<A-k>	general/mappings.vim	/^map <A-k> <C-w>k$/;"	m
<A-l>	general/mappings.vim	/^inoremap <A-l> <C-^>$/;"	m
<A-l>	general/mappings.vim	/^map <A-l> <C-w>l$/;"	m
<A-o>	conf/ranger.vim	/^nnoremap <silent> <A-o> :RnvimrToggle<CR>$/;"	m
<C-G>	conf/floaterm.vim	/^nmap <C-G> :FloatermNew lazygit<CR>$/;"	m
<C-Space>	conf/coc.vim	/^inoremap <silent><expr> <C-Space> coc#refresh()$/;"	m
<C-f>	conf/fzf.vim	/^nmap <C-f> :BLines<CR>$/;"	m
<F8>	conf/tagbar.vim	/^nmap <F8> :TagbarToggle<CR>$/;"	m
<F8>	conf/vista.vim	/^nmap <silent> <F8> :Vista!!<CR>$/;"	m
<S-TAB>	conf/coc.vim	/^inoremap <expr><S-TAB> pumvisible() ? "\\<C-p>" : "\\<C-h>"$/;"	m
<TAB>	conf/coc.vim	/^inoremap <silent><expr> <TAB>$/;"	m
<cr>	conf/coc.vim	/^  inoremap <expr> <cr> $/;"	m
<cr>	conf/coc.vim	/^  inoremap <expr> <cr> pumvisible() ? "\\<C-y>" : "\\<C-g>u\\<CR>"$/;"	m
<leader>	conf/whichkey.vim	/^nnoremap <silent> <leader> :silent <c-u> :silent WhichKey '<Space>'<CR>$/;"	m
<leader>	conf/whichkey.vim	/^vnoremap <silent> <leader> :silent <c-u> :silent WhichKeyVisual '<Space>'<CR>$/;"	m
<leader>,	general/mappings.vim	/^nmap <silent> <leader>, :noh<cr>$/;"	m
<leader>1	conf/airline.vim	/^nmap <leader>1 <Plug>AirlineSelectTab1$/;"	m
<leader>2	conf/airline.vim	/^nmap <leader>2 <Plug>AirlineSelectTab2$/;"	m
<leader>3	conf/airline.vim	/^nmap <leader>3 <Plug>AirlineSelectTab3$/;"	m
<leader>4	conf/airline.vim	/^nmap <leader>4 <Plug>AirlineSelectTab4$/;"	m
<leader>5	conf/airline.vim	/^nmap <leader>5 <Plug>AirlineSelectTab5$/;"	m
<leader>6	conf/airline.vim	/^nmap <leader>6 <Plug>AirlineSelectTab6$/;"	m
<leader>7	conf/airline.vim	/^nmap <leader>7 <Plug>AirlineSelectTab7$/;"	m
<leader>8	conf/airline.vim	/^nmap <leader>8 <Plug>AirlineSelectTab8$/;"	m
<leader>9	conf/airline.vim	/^nmap <leader>9 <Plug>AirlineSelectTab9$/;"	m
<leader>;	conf/vista.vim	/^nmap <silent> <leader>; :Vista!!<CR><A-l>$/;"	m
<leader><leader>N	conf/easymotion.vim	/^nmap  <leader><leader>N <Plug>(easymotion-prev)$/;"	m
<leader><leader>h	conf/easymotion.vim	/^nmap <leader><leader>h <Plug>(easymotion-linebackward)$/;"	m
<leader><leader>j	conf/easymotion.vim	/^nmap <leader><leader>j <Plug>(easymotion-j)$/;"	m
<leader><leader>k	conf/easymotion.vim	/^nmap <leader><leader>k <Plug>(easymotion-k)$/;"	m
<leader><leader>l	conf/easymotion.vim	/^nmap <leader><leader>l <Plug>(easymotion-lineforward)$/;"	m
<leader><leader>n	conf/easymotion.vim	/^nmap  <leader><leader>n <Plug>(easymotion-next)$/;"	m
<leader><tab>	conf/airline.vim	/^nmap <leader><tab> :bn<CR>$/;"	m
<leader>?	conf/whichkey.vim	/^nnoremap <silent> <leader>? :silent <c-u> :silent WhichKey '<Space>'<CR>$/;"	m
<leader>?	conf/whichkey.vim	/^vnoremap <silent> <leader>? :silent <c-u> :silent WhichKeyVisual '<Space>'<CR>$/;"	m
<leader>SS	conf/startify.vim	/^nmap <leader>SS :SSave<CR>$/;"	m
<leader>Sd	conf/startify.vim	/^nmap <leader>Sd :SDelete<CR>$/;"	m
<leader>Sl	conf/startify.vim	/^nmap <leader>Sl :SLoad<CR>$/;"	m
<leader>Sq	conf/startify.vim	/^nmap <leader>Sq :SClose<CR>$/;"	m
<leader>cN	conf/coc.vim	/^nmap <leader>cN <Plug>(coc-diagnostic-prev-error)$/;"	m
<leader>caa	conf/coc.vim	/^nmap <leader>caa  <Plug>(coc-codeaction)$/;"	m
<leader>cas	conf/coc.vim	/^nmap <leader>cas  <Plug>(coc-codeaction-selected)$/;"	m
<leader>cas	conf/coc.vim	/^xmap <leader>cas  <Plug>(coc-codeaction-selected)$/;"	m
<leader>cc	conf/coc.vim	/^nmap <leader>cc :CocRestart<CR>$/;"	m
<leader>cgd	conf/coc.vim	/^nmap <silent> <leader>cgd <Plug>(coc-definition)$/;"	m
<leader>cgi	conf/coc.vim	/^nmap <silent> <leader>cgi <Plug>(coc-implementation)$/;"	m
<leader>cgr	conf/coc.vim	/^nmap <silent> <leader>cgr <Plug>(coc-references)$/;"	m
<leader>cgy	conf/coc.vim	/^nmap <silent> <leader>cgy <Plug>(coc-type-definition)$/;"	m
<leader>cn	conf/coc.vim	/^nmap <leader>cn <Plug>(coc-diagnostic-next-error)$/;"	m
<leader>cp	conf/coc.vim	/^nmap <leader>cp :CocCommand prettier.formatFile<CR>$/;"	m
<leader>cq	conf/coc.vim	/^nmap <leader>cq  <Plug>(coc-fix-current)$/;"	m
<leader>cr	conf/coc.vim	/^nmap <leader>cr <Plug>(coc-rename)$/;"	m
<leader>dc	general/mappings.vim	/^nmap <leader>dc :cd %:p:h<CR>:pwd<CR>$/;"	m
<leader>dn	conf/nerdtree.vim	/^nmap <silent> <leader>dn :NERDTreeToggle %<CR>$/;"	m
<leader>dw	general/mappings.vim	/^nmap <leader>dw :w!<cr>$/;"	m
<leader>fb	conf/fzf.vim	/^nmap <leader>fb :Buffers<CR>$/;"	m
<leader>ff	conf/fzf.vim	/^nmap <leader>ff :Files<CR>$/;"	m
<leader>fg	conf/fzf.vim	/^nmap <leader>fg :GGrep<CR>$/;"	m
<leader>fm	conf/fzf.vim	/^nmap <leader>fm :Marks<CR>$/;"	m
<leader>fr	conf/fzf.vim	/^nmap <leader>fr :Rg<CR>$/;"	m
<leader>ft	conf/vista.vim	/^nmap <silent> <leader>ft :Vista finder coc<CR>$/;"	m
<leader>gA	conf/fugitive.vim	/^nmap <leader>gA :Git add .<CR>$/;"	m
<leader>gB	conf/fugitive.vim	/^nmap <leader>gB :GBrowse<CR>$/;"	m
<leader>gP	conf/fugitive.vim	/^nmap <leader>gP :Git push<CR>$/;"	m
<leader>gV	conf/fugitive.vim	/^nmap <leader>gV :GV!<CR>$/;"	m
<leader>ga	conf/fugitive.vim	/^nmap <leader>ga :Git add %<CR>$/;"	m
<leader>gb	conf/fugitive.vim	/^nmap <leader>gb :Git blame<CR>$/;"	m
<leader>gc	conf/fugitive.vim	/^nmap <leader>gc :Git commit<CR>$/;"	m
<leader>gd	conf/fugitive.vim	/^nmap <leader>gd :Git diff<CR>$/;"	m
<leader>gf	conf/fugitive.vim	/^nmap <leader>gf :diffget \/\/2<CR>$/;"	m
<leader>gg	conf/fugitive.vim	/^nmap <leader>gg :Git<CR>$/;"	m
<leader>gh	conf/fugitive.vim	/^nmap <leader>gh :diffget \/\/3<CR>$/;"	m
<leader>gl	conf/fugitive.vim	/^nmap <leader>gl :Git log<CR>$/;"	m
<leader>gp	conf/fugitive.vim	/^nmap <leader>gp :Git pull<CR>$/;"	m
<leader>gr	conf/fugitive.vim	/^nmap <leader>gr :GRemove<CR>$/;"	m
<leader>gs	conf/fugitive.vim	/^nmap <leader>gs :Git status<CR>$/;"	m
<leader>gv	conf/fugitive.vim	/^nmap <leader>gv :GV<CR>$/;"	m
<leader>l;	conf/coc.vim	/^nmap <leader>l; :CocListResume<CR>$/;"	m
<leader>la	conf/coc.vim	/^nmap <leader>la :CocList actions<CR>$/;"	m
<leader>lb	conf/coc.vim	/^nmap <leader>lb :CocList buffers<CR>$/;"	m
<leader>lc	conf/coc.vim	/^nmap <leader>lc :CocList commands<CR>$/;"	m
<leader>ld	conf/coc.vim	/^nmap <leader>ld :CocList diagnostic<CR>$/;"	m
<leader>lf	conf/coc.vim	/^nmap <leader>lf :CocList floaterm<CR>$/;"	m
<leader>ll	conf/coc.vim	/^nmap <leader>ll :CocList $/;"	m
<leader>ly	conf/coc.vim	/^nmap <leader>ly :CocList yank<CR>$/;"	m
<leader>n	conf/nerdtree.vim	/^nmap <silent> <leader>n :NERDTreeToggle<CR>$/;"	m
<leader>pg	conf/goyo.vim	/^nmap <leader>pg :Goyo<CR>$/;"	m
<leader>ph	conf/limelight.vim	/^nmap <leader>ph :Limelight!!<CR>$/;"	m
<leader>pl	general/mappings.vim	/^nmap <leader>pl :set list!<CR>$/;"	m
<leader>pp	conf/pencil.vim	/^nmap <silent> <leader>pp :PencilToggle<CR>$/;"	m
<leader>ps	general/mappings.vim	/^nmap <silent> <leader>ps :set spell!<CR>$/;"	m
<leader>rM	conf/markdown.vim	/^nmap <leader>rM :MarkdownPreviewStop<CR>$/;"	m
<leader>rW	conf/bracey.vim	/^nmap <leader>rW :BraceyStop<CR>$/;"	m
<leader>rm	conf/markdown.vim	/^nmap <leader>rm :MarkdownPreview<CR>$/;"	m
<leader>rw	conf/bracey.vim	/^nmap <leader>rw :Bracey<CR>$/;"	m
<leader>ss	conf/startify.vim	/^nmap <leader>ss :Startify<CR>$/;"	m
<leader>ve	general/mappings.vim	/^nmap <silent> <leader>ve :tabedit $MYVIMRC<CR>$/;"	m
<leader>vs	general/mappings.vim	/^nmap <silent> <leader>vs :so $MYVIMRC<CR>$/;"	m
DoRemote	plug/plugins.vim	/^function! DoRemote(arg)$/;"	f
Files	conf/fzf.vim	/^command! -bang -nargs=? -complete=dir Files$/;"	c
GGrep	conf/fzf.vim	/^command! -bang -nargs=* GGrep$/;"	c
K	conf/coc.vim	/^nnoremap <silent> K :call <SID>show_documentation()<CR>$/;"	m
N	general/mappings.vim	/^noremap N Nzz$/;"	m
NERDTreeAutoDeleteBuffer	conf/nerdtree.vim	/^let NERDTreeAutoDeleteBuffer = 1$/;"	v
NERDTreeDirArrows	conf/nerdtree.vim	/^let NERDTreeDirArrows = 1$/;"	v
NERDTreeMinimalUI	conf/nerdtree.vim	/^let NERDTreeMinimalUI = 1$/;"	v
Q	general/mappings.vim	/^nmap <silent> Q :bd<CR>$/;"	m
RG	conf/fzf.vim	/^command! -nargs=* -bang RG call RipgrepFzf(<q-args>, <bang>0)$/;"	c
Rg	conf/fzf.vim	/^command! -bang -nargs=* Rg$/;"	c
RipgrepFzf	conf/fzf.vim	/^function! RipgrepFzf(query, fullscreen)$/;"	f
[g	conf/coc.vim	/^nmap <silent> [g <Plug>(coc-diagnostic-prev)$/;"	m
]g	conf/coc.vim	/^nmap <silent> ]g <Plug>(coc-diagnostic-next)$/;"	m
coc.preferences.extensionUpdateCheck	coc-settings.json	/^  "coc.preferences.extensionUpdateCheck": "daily",$/;"	s
coc.preferences.formatOnSaveFiletypes	coc-settings.json	/^  "coc.preferences.formatOnSaveFiletypes": [$/;"	a
coc.source.emoji.filetypes	coc-settings.json	/^  "coc.source.emoji.filetypes": [ $/;"	a
entry_format	conf/devicons.vim	/^  let entry_format .= $/;"	v
entry_format	conf/devicons.vim	/^  let entry_format .= '. entry_path'$/;"	v
entry_format	conf/devicons.vim	/^let entry_format = "'   ['. index .']'. repeat(' ', (3 - strlen(index)))"$/;"	v
g:CtrlSpaceDefaultMappingKey	conf/ctrlspace.vim	/^let g:CtrlSpaceDefaultMappingKey = "<C-space> "$/;"	v
g:EasyMotion_do_mapping	conf/easymotion.vim	/^let g:EasyMotion_do_mapping = 0 " Disable default mappings$/;"	v
g:EasyMotion_keys	conf/easymotion.vim	/^let g:EasyMotion_keys='ASDFJKL;GHQWERUIPTYZXCVBNM'$/;"	v
g:EasyMotion_smartcase	conf/easymotion.vim	/^let g:EasyMotion_smartcase = 1$/;"	v
g:EasyMotion_use_smartsign_us	conf/easymotion.vim	/^let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_upper	conf/easymotion.vim	/^let g:EasyMotion_use_upper=1$/;"	v
g:NERDDefaultAlign	conf/nerdtree.vim	/^let g:NERDDefaultAlign = 'left'$/;"	v
g:NERDTreeHighlightFolders	conf/devicons.vim	/^let g:NERDTreeHighlightFolders = 1 $/;"	v
g:NERDTreeHighlightFoldersFullName	conf/devicons.vim	/^let g:NERDTreeHighlightFoldersFullName = 1 $/;"	v
g:NERDTreePatternMatchHighlightFullName	conf/devicons.vim	/^let g:NERDTreePatternMatchHighlightFullName = 1$/;"	v
g:NERDTreeQuitOnOpen	conf/nerdtree.vim	/^let g:NERDTreeQuitOnOpen = 1$/;"	v
g:SimpylFold_docstring_preview	conf/simpylfold.vim	/^let g:SimpylFold_docstring_preview = 1$/;"	v
g:XkbSwitchAssistNKeymap	conf/xkbswitch.vim	/^let g:XkbSwitchAssistNKeymap = 1    " for commands r and f$/;"	v
g:XkbSwitchAssistSKeymap	conf/xkbswitch.vim	/^let g:XkbSwitchAssistSKeymap = 1    " for search lines$/;"	v
g:XkbSwitchEnabled	conf/xkbswitch.vim	/^	let g:XkbSwitchEnabled = 0$/;"	v
g:XkbSwitchEnabled	conf/xkbswitch.vim	/^let g:XkbSwitchEnabled = 1$/;"	v
g:XkbSwitchIMappings	conf/xkbswitch.vim	/^let g:XkbSwitchIMappings = ['ru']$/;"	v
g:XkbSwitchKeymapNames	conf/xkbswitch.vim	/^let g:XkbSwitchKeymapNames = {'ru' : 'ru_keymap', 'us' : 'us_keymap'}$/;"	v
g:XkbSwitchLib	conf/xkbswitch.vim	/^let g:XkbSwitchLib = '\/usr\/lib\/libxkbswitch.so'$/;"	v
g:airline#extensions#keymap#enabled	conf/airline.vim	/^let g:airline#extensions#keymap#enabled = 0$/;"	v
g:airline#extensions#tabline#buffer_idx_mode	conf/airline.vim	/^let g:airline#extensions#tabline#buffer_idx_mode = 1$/;"	v
g:airline#extensions#tabline#enabled	conf/airline.vim	/^let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline_detect_spelllang	conf/airline.vim	/^let g:airline_detect_spelllang=0$/;"	v
g:airline_powerline_fonts	conf/airline.vim	/^let g:airline_powerline_fonts = 1$/;"	v
g:airline_symbols	conf/airline.vim	/^  let g:airline_symbols = {}$/;"	v
g:coc_global_extensions	conf/coc.vim	/^let g:coc_global_extensions = [$/;"	v
g:floaterm_autoclose	conf/floaterm.vim	/^let g:floaterm_autoclose=1$/;"	v
g:floaterm_autoinsert	conf/floaterm.vim	/^let g:floaterm_autoinsert=1$/;"	v
g:floaterm_gitcommit	conf/floaterm.vim	/^let g:floaterm_gitcommit='floaterm'$/;"	v
g:floaterm_height	conf/floaterm.vim	/^let g:floaterm_height=0.8$/;"	v
g:floaterm_keymap_kill	conf/floaterm.vim	/^let g:floaterm_keymap_kill   = '<F5>'$/;"	v
g:floaterm_keymap_new	conf/floaterm.vim	/^let g:floaterm_keymap_new    = '<F4>'$/;"	v
g:floaterm_keymap_next	conf/floaterm.vim	/^let g:floaterm_keymap_next   = '<F3>'$/;"	v
g:floaterm_keymap_prev	conf/floaterm.vim	/^let g:floaterm_keymap_prev   = '<F2>'$/;"	v
g:floaterm_keymap_toggle	conf/floaterm.vim	/^let g:floaterm_keymap_toggle = '<F1>'$/;"	v
g:floaterm_width	conf/floaterm.vim	/^let g:floaterm_width=0.8$/;"	v
g:fzf_action	conf/fzf.vim	/^let g:fzf_action = {$/;"	v
g:fzf_buffers_jump	conf/fzf.vim	/^let g:fzf_buffers_jump = 1$/;"	v
g:fzf_history_dir	conf/fzf.vim	/^let g:fzf_history_dir = '~\/.local\/share\/fzf-history'$/;"	v
g:fzf_layout	conf/fzf.vim	/^let g:fzf_layout = {'up':'~90%', 'window': { 'width': 0.8, 'height': 0.8,'yoffset':0.5,'xoffset'/;"	v
g:fzf_tags_command	conf/fzf.vim	/^let g:fzf_tags_command = 'ctags -R'$/;"	v
g:mapleader	general/mappings.vim	/^let g:mapleader = " "$/;"	v
g:markdown_enable_input_abbreviations	conf/markdown.vim	/^let g:markdown_enable_input_abbreviations = 1$/;"	v
g:markdown_enable_insert_mode_mappings	conf/markdown.vim	/^let g:markdown_enable_insert_mode_mappings = 1$/;"	v
g:markdown_enable_mappings	conf/markdown.vim	/^let g:markdown_enable_mappings = 1$/;"	v
g:mkdp_auto_close	conf/markdown.vim	/^let g:mkdp_auto_close = 0$/;"	v
g:mkdp_highlight_css	conf/markdown.vim	/^let g:mkdp_highlight_css = expand('~\/.config\/nvim\/themes\/markdown_preview.css')$/;"	v
g:nerdtreeexactmatchhighlightfullname	conf/devicons.vim	/^let g:nerdtreeexactmatchhighlightfullname = 1$/;"	v
g:nerdtreefileextensionhighlightfullname	conf/devicons.vim	/^let g:nerdtreefileextensionhighlightfullname = 1$/;"	v
g:polyglot_disabled	conf/polyglot.vim	/^let g:polyglot_disabled = ['csv']$/;"	v
g:python_highlight_all	conf/polyglot.vim	/^let g:python_highlight_all = 1$/;"	v
g:rnvimr_border_attr	conf/ranger.vim	/^let g:rnvimr_border_attr = {'fg': 103, 'bg': -1}$/;"	v
g:rnvimr_enable_picker	conf/ranger.vim	/^let g:rnvimr_enable_picker = 1$/;"	v
g:rnvimr_ex_enable	conf/ranger.vim	/^let g:rnvimr_ex_enable = 1$/;"	v
g:rnvimr_hide_gitignore	conf/ranger.vim	/^let g:rnvimr_hide_gitignore = 1$/;"	v
g:rnvimr_layout	conf/ranger.vim	/^let g:rnvimr_layout = { 'relative': 'editor',$/;"	v
g:rnvimr_presets	conf/ranger.vim	/^let g:rnvimr_presets = [$/;"	v
g:startify_change_to_vcs_root	conf/startify.vim	/^let g:startify_change_to_vcs_root = 1$/;"	v
g:startify_fortune_use_unicode	conf/startify.vim	/^let g:startify_fortune_use_unicode = 1$/;"	v
g:startify_padding_left	conf/startify.vim	/^let g:startify_padding_left = 2$/;"	v
g:startify_session_autoload	conf/startify.vim	/^let g:startify_session_autoload = 1$/;"	v
g:startify_update_oldfiles	conf/startify.vim	/^let g:startify_update_oldfiles = 1$/;"	v
g:user_emmet_leader_key	conf/emmet.vim	/^let g:user_emmet_leader_key='<C-l>'$/;"	v
g:vim_jsx_pretty_colorful_config	conf/polyglot.vim	/^let g:vim_jsx_pretty_colorful_config = 1$/;"	v
g:vista_default_executive	conf/vista.vim	/^let g:vista_default_executive = 'coc'$/;"	v
g:vista_echo_cursor_strategy	conf/vista.vim	/^  let g:vista_echo_cursor_strategy = 'floating_win'$/;"	v
g:vista_icon_indent	conf/vista.vim	/^let g:vista_icon_indent = ["╰─ ", "├─ "]$/;"	v
g:vista_sidebar_keepalt	conf/vista.vim	/^let g:vista_sidebar_keepalt = 1$/;"	v
g:vista_stay_on_open	conf/vista.vim	/^let g:vista_stay_on_open = 0$/;"	v
g:vista_update_on_text_changed	conf/vista.vim	/^let g:vista_update_on_text_changed = 1$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map =  {}$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.1 = 'which_key_ignore'$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.2 = 'which_key_ignore'$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.3 = 'which_key_ignore'$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.4 = 'which_key_ignore'$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.5 = 'which_key_ignore'$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.6 = 'which_key_ignore'$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.7 = 'which_key_ignore'$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.8 = 'which_key_ignore'$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.9 = 'which_key_ignore'$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.S = {$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.c = {$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.d = {$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.f = {$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.g = {$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.i = {$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.l = {$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.p = {$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.r = {$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.s = {$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map.v = {$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map[' '] = {$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map[','] = [ 'noh', 'Clear highlighting' ]$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map[';'] = [ ':Vista', 'open tags by vista' ]$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map['NUM'] = 'jump to NUM tab'$/;"	v
g:which_key_map	conf/whichkey.vim	/^let g:which_key_map['n'] = [ 'NERDTreeToggle', 'NERDTree' ]$/;"	v
g:which_key_sep	conf/whichkey.vim	/^let g:which_key_sep = '→'$/;"	v
mapleader	general/mappings.vim	/^let mapleader = " "$/;"	v
mygroup	conf/coc.vim	/^augroup mygroup$/;"	a
n	general/mappings.vim	/^noremap n nzz$/;"	m
q:	general/mappings.vim	/^map q: <Nop>$/;"	m
s	conf/easymotion.vim	/^nmap s <Plug>(easymotion-overwin-f2)$/;"	m
s:check_back_space	conf/coc.vim	/^function! s:check_back_space() abort$/;"	f
s:show_documentation	conf/coc.vim	/^function! s:show_documentation()$/;"	f
t	conf/easymotion.vim	/^omap t <Plug>(easymotion-bd-tl)$/;"	m
undefined nvim	README.md	/^# undefined nvim$/;"	c
w!!	general/settings.vim	/^cmap w!! w !sudo tee %$/;"	m
